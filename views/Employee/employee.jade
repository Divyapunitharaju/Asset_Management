doctype html
html(lang="en")
  head
    link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css')
    link(rel="stylesheet", href="https://cdn.datatables.net/1.13.1/css/jquery.dataTables.min.css")
    script(src="https://code.jquery.com/jquery-3.6.0.min.js")
    script(src="https://cdn.datatables.net/1.13.1/js/jquery.dataTables.min.js")
  body
    .container.my-5
      form#searchForm(method="get")
        .row.mb-3
          .col-md-6
            input#search.form-control(type="text" name="search" placeholder="Search by name")
          .col-md-3
            select#status.form-control(name="status")
              option(value="active") Active
              option(value="inactive") Inactive
          .col-md-3
            button.btn.btn-primary(type="submit") Search
        a.btn.btn-secondary.my-3(href='/employees/add') Add New +
      table.table.table-striped#employeeTable
        thead
          tr
            th Name
            th Position
            th Status
            th Action
        tbody
          if employees && employees.length
            each employee in employees
              tr
                td= employee.name
                td= employee.position
                td= employee.status
                td
                  a.btn.btn-warning(href='/employees/edit/' + employee.id) Edit
          else
            tr
              td(colspan="4") No employees found.
    
    script.
      const form = document.getElementById('searchForm');
      const search = document.getElementById('search');
      const status = document.getElementById('status');
      const employeeTable = document.getElementById('employeeTable');
      const tbody = employeeTable.querySelector('tbody');

      
      form.addEventListener('submit', async (e) => {
          e.preventDefault();
          const query = new URLSearchParams({
              search: search.value.trim(),
              status: status.value,
          }).toString();

          try {
              const response = await fetch(`http://localhost:3000/employees/?${query}`,
                         {
                          method: "GET",
                          headers: {
                          "Content-Type": "application/json"
                            }}
              );
              console.log('Response:', response)
              if (response.ok) {
                  const employees = await response.json();
                  console.log('Employees:', employees);
                  renderEmployeeTable(employees);
              } else {
                  const error = await response.json();
                  console.log('Error fetching employees:', error.message);
              }
          } catch (err) {
              console.error('Error:', err.message || err);
          }
      });

     
      function renderEmployeeTable(employees) {
          tbody.innerHTML = '' 
          if (employees.length > 0) {
              employees.forEach(employee => {
                  const row = document.createElement('tr');
                  row.innerHTML = `
                      <td>${employee.name}</td>
                      <td>${employee.position}</td>
                      <td>${employee.status}</td>
                      <td>
                          <a href="/employees/edit/${employee.id}" class="btn btn-warning">Edit</a>
                      </td>`;
                  tbody.appendChild(row);
              });
          } else {
              const noDataRow = document.createElement('tr');
              noDataRow.innerHTML = `<td colspan="4">No employees found.</td>`;
              tbody.appendChild(noDataRow);
          }

          
          if ($.fn.DataTable.isDataTable('#employeeTable')) {
              $('#employeeTable').DataTable().destroy();
          }
          $('#employeeTable').DataTable();
      }

      
      $(document).ready(function () {
          $('#employeeTable').DataTable();
      });
